{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/python-jwt","result":{"data":{"markdownRemark":{"id":"e3383387-c9c8-5845-9ab0-e849ca215482","html":"<h2 id=\"모듈-설치\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EC%84%A4%EC%B9%98\" aria-label=\"모듈 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"commandline\"><pre class=\"language-commandline\"><code class=\"language-commandline\">pip install pyjwt</code></pre></div>\n<h2 id=\"자동-로그인-시나리오\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%8F%99-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-label=\"자동 로그인 시나리오 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자동 로그인 시나리오</h2>\n<ol>\n<li>로그인 시 Access token과 Refresh token 발급</li>\n<li>DB에 Refresh token 저장</li>\n<li>클라이언트에서 Access token과 Refresh token 둘 다 보냄</li>\n<li>Access token의 기간 확인\n<ol>\n<li>Access token의 기간이 만료된 경우\n<ul>\n<li>클라이언트에서 받은 Refresh token 과 DB의 Refresh token 이 일치하면 Access token 재발급</li>\n</ul>\n</li>\n<li>Access token의 기간은 유효한데 Refresh token이 만료된 경우\n<ul>\n<li>Access token이 유효하면 Refresh token 재발급</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>로그아웃시 Access token과 Refresh token 만료시키기</li>\n</ol>\n<h2 id=\"handler\" style=\"position:relative;\"><a href=\"#handler\" aria-label=\"handler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>handler</h2>\n<ul>\n<li>랜덤 키 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"commandline\"><pre class=\"language-commandline\"><code class=\"language-commandline\">openssl rand -hex 64</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> jwt\n\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime<span class=\"token punctuation\">,</span> timedelta\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">JWT</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>ACCESS_EXPIRED_TIME <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n        self<span class=\"token punctuation\">.</span>REFRESH_EXPIRED_TIME <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        self<span class=\"token punctuation\">.</span>ALGORITHM <span class=\"token operator\">=</span> <span class=\"token string\">'HS256'</span>\n        self<span class=\"token punctuation\">.</span>SECRET_KEY <span class=\"token operator\">=</span> <span class=\"token string\">'random key'</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_access_token</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        expired_at <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>utcnow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>ACCESS_EXPIRED_TIME<span class=\"token punctuation\">)</span>\n        kr_expired_at <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expired_at <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>hours<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%Y-%m-%d %H:%M:%S'</span><span class=\"token punctuation\">)</span>\n        payload<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'exp'</span><span class=\"token punctuation\">:</span> expired_at<span class=\"token punctuation\">,</span>\n                         <span class=\"token string\">'expired_at'</span><span class=\"token punctuation\">:</span> kr_expired_at<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>SECRET_KEY<span class=\"token punctuation\">,</span> algorithm<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>ALGORITHM<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> result\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_refresh_token</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        expired_at <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>utcnow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>REFRESH_EXPIRED_TIME<span class=\"token punctuation\">)</span>\n        kr_expired_at <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>expired_at <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>hours<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%Y-%m-%d %H:%M:%S'</span><span class=\"token punctuation\">)</span>\n        payload<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'exp'</span><span class=\"token punctuation\">:</span> expired_at<span class=\"token punctuation\">,</span>\n                         <span class=\"token string\">'expired_at'</span><span class=\"token punctuation\">:</span> kr_expired_at<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>SECRET_KEY<span class=\"token punctuation\">,</span> algorithm<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>ALGORITHM<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> result\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">verify_token</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            response <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>SECRET_KEY<span class=\"token punctuation\">,</span> algorithms<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>ALGORITHM<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> jwt<span class=\"token punctuation\">.</span>ExpiredSignatureError<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 토큰 인증 시간 만료</span>\n            <span class=\"token keyword\">raise</span> TypeError<span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'토큰 기간이 만료되었습니다.'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> jwt<span class=\"token punctuation\">.</span>InvalidTokenError<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 토큰 검증 실패</span>\n            <span class=\"token keyword\">raise</span> TypeError<span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'로그인이 필요합니다'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> response</code></pre></div>","fields":{"slug":"/posts/2024//posts/python-jwt","tagSlugs":["/tag/python/","/tag/jwt/","/tag/token/"]},"frontmatter":{"date":"2024-02-05","description":"JWT Token","tags":["python","jwt","token"],"title":"JWT 토큰","socialImage":null}}},"pageContext":{"slug":"/posts/2024//posts/python-jwt"}},"staticQueryHashes":["251939775","2764776372","401334301"]}