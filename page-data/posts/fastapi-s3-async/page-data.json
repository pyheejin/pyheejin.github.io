{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/fastapi-s3-async","result":{"data":{"markdownRemark":{"id":"067660e2-4b24-511c-a087-94c0cc5aee84","html":"<h1 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h1>\n<div class=\"gatsby-highlight\" data-language=\"commandline\"><pre class=\"language-commandline\"><code class=\"language-commandline\">pip install pillow</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"commandline\"><pre class=\"language-commandline\"><code class=\"language-commandline\">pip install pillow-heif</code></pre></div>\n<h1 id=\"s3-연동\" style=\"position:relative;\"><a href=\"#s3-%EC%97%B0%EB%8F%99\" aria-label=\"s3 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>S3 연동</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> boto3\n<span class=\"token keyword\">import</span> pillow_heif\n\n<span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n<span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> BytesIO\n<span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> UploadFile\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">s3_connection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        s3 <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span>\n            service_name<span class=\"token operator\">=</span><span class=\"token string\">'s3'</span><span class=\"token punctuation\">,</span>\n            region_name<span class=\"token operator\">=</span><span class=\"token string\">'ap-northeast-2'</span><span class=\"token punctuation\">,</span>\n            aws_access_key_id<span class=\"token operator\">=</span>AWS_ACCESS_KEY<span class=\"token punctuation\">,</span>\n            aws_secret_access_key<span class=\"token operator\">=</span>AWS_ACCESS_SECRET_KEY<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s3 bucket connected!'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> s3\n\n\ns3 <span class=\"token operator\">=</span> s3_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">upload_file</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> bucket<span class=\"token punctuation\">,</span> bucket_folder<span class=\"token punctuation\">,</span> object_name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    file: 업로드 할 파일\n    bucket: 업로드 될 버킷\n    object_name: S3 객체 이름, 없으면 file_name 사용\n    \"\"\"</span>\n\n    <span class=\"token comment\"># S3 객체 이름이 정의 되지 않으면, file.filename 사용</span>\n    <span class=\"token keyword\">if</span> object_name <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        object_name <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>filename\n\n    <span class=\"token comment\"># 저장할 버킷 폴더 선택</span>\n    object_key <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bucket_folder<span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>object_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        s3<span class=\"token punctuation\">.</span>upload_file<span class=\"token punctuation\">(</span>\n            <span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span>\n            bucket<span class=\"token punctuation\">,</span>\n            object_key<span class=\"token punctuation\">,</span>\n            ExtraArgs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"ContentType\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"image/jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ACL\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"public-read\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        file_path <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://vukapro.s3.ap-northeast-2.amazonaws.com/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bucket_folder<span class=\"token punctuation\">}</span></span><span class=\"token string\">/'</span></span>\n        image_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://vukapro.s3.ap-northeast-2.amazonaws.com/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>object_key<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n        <span class=\"token keyword\">return</span> file_path<span class=\"token punctuation\">,</span> image_url\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">upload_file_async</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span> UploadFile<span class=\"token punctuation\">,</span> bucket_folder<span class=\"token punctuation\">,</span> object_name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    file: 업로드 할 파일\n    bucket: 업로드 될 버킷\n    object_name: S3 객체 이름, 없으면 file_name 사용\n    \"\"\"</span>\n    bucket <span class=\"token operator\">=</span> <span class=\"token string\">'bucket'</span>\n    s3_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bucket<span class=\"token punctuation\">}</span></span><span class=\"token string\">.s3.ap-northeast-2.amazonaws.com/'</span></span>\n\n    <span class=\"token comment\"># S3 객체 이름이 정의 되지 않으면, file.filename 사용</span>\n    <span class=\"token keyword\">if</span> object_name <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        object_name <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>filename\n\n    <span class=\"token comment\"># 저장할 버킷 폴더 선택</span>\n    object_key <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bucket_folder<span class=\"token punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>object_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">.webp\"</span></span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        s3<span class=\"token punctuation\">.</span>upload_fileobj<span class=\"token punctuation\">(</span>\n            <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span>\n            bucket<span class=\"token punctuation\">,</span>\n            object_key<span class=\"token punctuation\">,</span>\n            ExtraArgs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'ContentType'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'image/jpg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ACL'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'public-read'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        file_path <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>s3_url<span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>bucket_folder<span class=\"token punctuation\">}</span></span><span class=\"token string\">/'</span></span>\n        image_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>s3_url<span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>object_key<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n        <span class=\"token keyword\">return</span> file_path<span class=\"token punctuation\">,</span> image_url\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">convert_to_webp</span><span class=\"token punctuation\">(</span>image_data<span class=\"token punctuation\">,</span> extension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> extension<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'HEIC'</span><span class=\"token punctuation\">:</span>\n        heif_file <span class=\"token operator\">=</span> pillow_heif<span class=\"token punctuation\">.</span>read_heif<span class=\"token punctuation\">(</span>image_data<span class=\"token punctuation\">)</span>\n        image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>frombytes<span class=\"token punctuation\">(</span>heif_file<span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">,</span> heif_file<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span> heif_file<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> <span class=\"token string\">'raw'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>BytesIO<span class=\"token punctuation\">(</span>image_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    webp_data <span class=\"token operator\">=</span> BytesIO<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    image<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>webp_data<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">'webp'</span><span class=\"token punctuation\">,</span> quality<span class=\"token operator\">=</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span>\n    webp_data<span class=\"token punctuation\">.</span>seek<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> webp_data\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">image_upload</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> folder<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    file_data <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\n    extension <span class=\"token operator\">=</span> file_data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># webp 변환</span>\n    webp_data <span class=\"token operator\">=</span> convert_to_webp<span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> request<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> extension<span class=\"token punctuation\">)</span>\n    filename <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>filename<span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>file_data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n    webp_upload_file <span class=\"token operator\">=</span> UploadFile<span class=\"token punctuation\">(</span>webp_data<span class=\"token punctuation\">,</span> filename<span class=\"token operator\">=</span>filename<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># aws에 이미지 업로드</span>\n    file_path<span class=\"token punctuation\">,</span> image_url <span class=\"token operator\">=</span> upload_file_async<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token operator\">=</span>webp_upload_file<span class=\"token punctuation\">,</span>\n                                             bucket_folder<span class=\"token operator\">=</span>folder<span class=\"token punctuation\">,</span>\n                                             object_name<span class=\"token operator\">=</span>filename<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> file_path<span class=\"token punctuation\">,</span> image_url</code></pre></div>\n<ul>\n<li>controller.py</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">image_controller</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> image <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>image_files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        file_path<span class=\"token punctuation\">,</span> image_url <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> image_upload<span class=\"token punctuation\">(</span>request<span class=\"token operator\">=</span>image<span class=\"token punctuation\">,</span>\n                                                  folder<span class=\"token operator\">=</span><span class=\"token string\">'folder'</span><span class=\"token punctuation\">,</span>\n                                                  filename<span class=\"token operator\">=</span><span class=\"token string\">'filename'</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/posts/2024//posts/fastapi-s3-async","tagSlugs":["/tag/fastapi/","/tag/s3/","/tag/async/","/tag/image/","/tag/file/","/tag/upload/"]},"frontmatter":{"date":"2024-01-19","description":"","tags":["fastapi","s3","async","image","file","upload"],"title":"이미지 WebP 변환 후 S3에 비동기로 업로드","socialImage":null}}},"pageContext":{"slug":"/posts/2024//posts/fastapi-s3-async"}},"staticQueryHashes":["251939775","2764776372","401334301"]}